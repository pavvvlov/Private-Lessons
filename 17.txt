I,II,III

1. Посочете кое от следните е правилна дефиниция на понятието вектор:
 - отсечка, на която единия край е избран за начало, а другият за край

2. Посочете кое от следните НЕ е свойство на векторите:
 - идемпотентност

3. Нека имаме вектор v1(k1, k2, k3, ... kn) и v2(l1, l2, l3, ..., ln). Кой от изразите описва скаларното произведение на двата вектора?
 - (k1 * l1) + (k2 * l2) + ... + (kn * ln)

4. Какъв е сборът на вектор v1(3, 6) с вектор v2(1, 5)?
 - v3(4, 11)

5. Каква е стойността на скаларното произведение на два вектора, за които е известно, че те са перпендикулярни?
 - 0(нула)



IV

1. [[1] - Векторите] са съставени от компоненти, които са числа. Те представляват [[4] - масив] от числа, а операциите върху тях се разглеждат като операции върху него. 
В програмните езици те могат да се представят като [[7] - масив].


V,VI

1. Дефинирайте понятието множество.
 - всяка съвкупност от определени и различни един от друг
обекти, които човешката интуиция или интелект възприема като единно
цяло

2. Коя операция между множества е показана на изображението: (зелено)
 - разлика

3. Коя операция между множества е показана на изображението: (червено)
 - сечение

4. Коя операция между множества е показана на изображението: (синьо)
 - обединение


VII,VII
1. Нека имаме следните множества:

A = {1, 2, 3}

B = {3, 4, 5}

Можем да кажем, че:

A ∪ B = [[1] - {1, 2, 3, 4, 5}]

1 [[4] - ∈] A


2. Нека имаме следните множества:

A = {1, 2, 3}

B = {3, 4, 5}

Можем да кажем, че:

A ∩ B = [[2] - {3}]

5 [[5] - ∉] A


3. Нека имаме следните множества:

A = {1, 2, 3}

B = {3, 4, 5}

Можем да кажем, че:

A \ B = [[3] - {1, 2}]

3 [[4] - ∈] B


4. Нека имаме следните множества:

A = {1, 2, 3}

B = {3, 4, 5}

Можем да кажем, че:

A ∩ B = [[2] - {3}]

3 [[4] - ∈] B



IX,X,XI
1. Изберете правилната дефиниция на понятието вариация без повторение.
 - Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение

2. Изберете правилната дефиниция на понятието вариация с повторение.
 - Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът е от значение

3. Изберете правилната дефиниция на понятието комбинация без повторение.
 - Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение

4. Изберете правилната дефиниция на понятието комбинация с повторение.
 - Съвкупност от избрани k елемента от общо n елемента на дадено множество, като редът не е от значение

5. Изберете правилната дефиниция на понятието пермутация.
 - Всяка подредена съвкупност от n елемента на дадено множество, като всеки се среща само веднъж



XII,XIII,XIV
1. Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

1 1 ; 1 2 ; 1 3 ; 2 1 ; 2 2 ; 2 3 ; 3 1 ; 3 2 ; 3 3
А.  [[1] - Вариации с повторение]

1 1 ; 1 2 ; 1 3 ; 2 2 ; 2 3 ; 3 3
Б. [[2] - Комбинации с потворение]

1 2 ; 1 3 ; 2 3
В. [[3] - Комбинации без повторение]

2. Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

1 1 ; 1 2 ; 1 3 ; 2 1 ; 2 2 ; 2 3 ; 3 1 ; 3 2 ; 3 3
А.  [[1] - Вариации с повторение]

1 1 ; 1 2 ; 1 3 ; 2 2 ; 2 3 ; 3 3
Б. [[2] - Комбинации с потворение]1 2

1 3 ; 2 1 ; 2 3 ; 3 1 ; 3 2
В. [[4] - Вариации без повторение]

3. Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

Представени са три комбинаторни конфигурации. Надпишете всяка от тях. (много числа не ми се пишат)

 - А. [[5] - Пермутации без повторение]

Б. [[2] - Комбинации с потворение]

В. [[3] - Комбинации без повторение]

4. Представени са три комбинаторни конфигурации. Надпишете всяка от тях.

Представени са три комбинаторни конфигурации. Надпишете всяка от тях. (тва със символите)

 - А. [[5] - Пермутации без повторение]

Б. [[2] - Комбинации с потворение]

В. [[3] - Комбинации без повторение]


XV,XVI,XVII
1. Използвайте блоковете, за да опишете алгоритъм за генериране на вариации с повторение

public static void Generate(int index)

{

  if([[1] - index >= k]) {

    Console.WriteLine(string.Join(" ", variation));

  } else {

    for(int i = 0; i < elements.Length; i++) {

        variation[ [[4] - index] ] = [[5] - elements[i]];

        Generate(index + 1);

    }

  }

}

2. Използвайте блоковете, за да опишете алгоритъм за генериране на комбинации без повторение

public static void Generate(int index, int start)

{

  if([[1] - index >= k]) {

    Console.WriteLine(string.Join(" ", combination));

  } else {

    for(int i = start; i < elements.Length; i++) {

        combination[ [[4] - index] ] = [[5] - elements[i]];

        Generate(index + 1, [[2] - i + 1]);

    }

  }

}

3. Използвайте блоковете, за да опишете алгоритъм за генериране на пермутации

public static void Generate(int index)

{

  if([[1] - index >= elements.Length]) {

    Console.WriteLine(string.Join(" ", permutation));

  } else {

    for(int i = 0; i < elements.Length; i++) {

      if([[2] - !used[i]]) {

        [[3] - used[i] = true];

        permutation[ [[4] - index] ] = [[5 - elements[i]]];

        Generate(index + 1);

        used[i] = false;

      }

    }

  }

}



XVIII,XIX
1. Демонстрирайте пресмятане на средната вероятност за резултат от 1 до 6 при хвърляне на зар за 5000 хвърляния. Използвайте средствата на изучаван език за програмиране (Python и Numpy или C#).
 - 

2. 
3. 


XX,XXI,XXII,XXIII
1. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора AB
import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
coordinates2 =
A = np.array(coordinates1)
B = np.array( )

v1 = B  A
print(v1)

 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

v1 = B - A
print(v1)

2. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора BA
import numpy as np
coordinates1 = 
coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
A = np.array()
B = np.array(coordinates2)

v1 = A B
print(v1)


 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

v1 = A - B
print(v1)

3. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на две точки (А и B) в тримерна координатна система и изчислява координатите на вектора AB. Намерете дължината на вектора AB.
 import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
coordinates2 =
A = np.array(coordinates1)
B = np.array( )

v1 = B -  A
length = np.linalg
print(length)

 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на точка А: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на точка B: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

v1 = B - A
length = np.linalg.norm(v1)
print(length)


4. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира скаларното произведение на двата вектора.
import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 =
A = np.array(coordinates1)
B = np.array( )

result = 
print(result)

 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

result = A.dot(B.T)
print(result)

5. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира векторното произведение на двата вектора.
import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 =
A = np.array(coordinates1)
B = np.array( )

result = 
print(result)

 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

result = np.cross(A, B)
print(result)

6. По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Напишете програма, която въвежда координатите на два вектора v1 и v2 в тримерна координатна система. Програмата да намира дали двата вектора са перпендикулярни.
import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
A = np.array(coordinates1)
B = np.array( )

result = 
print(result)
if result == :

  print('yes')

else:

  print('no')

 - import numpy as np
coordinates1 = list(map(int, input('Въведете координатите на вектор v1: ').split()))
coordinates2 = list(map(int, input('Въведете координатите на вектор v2: ').split()))
A = np.array(coordinates1)
B = np.array(coordinates2)

result = A.dot(B.T)
print(result)
if result == 0:

  print('yes')

else:

  print('no')